trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - latest.json
      - src/main.rs
resources:
  repositories:
    - repository: rust_pipelines
      type: github
      name: xoac/rust-azure-pipelines
      ref: refs/heads/master
      endpoint: andraantariksa_accesstoken

stages:
  - stage: test
    displayName: "Tests"
    jobs:
    - template: ci/jobs/cargo-test.yaml@rust_pipelines
      parameters:
        test-flags:
          nocapture: true
        job_strategy:
          matrix:
            Linux:
              vmImage: ubuntu-16.04
            Windows:
              vmImage: vs2017-win2016
            MacOS:
              vmImage: macOS-10.15

  - stage: build
    displayName: "Builds"
    dependsOn:
    - test
    jobs:
    - template: ci/scenarios/builds.yml@rust_pipelines 
      parameters:
        artifactName: target
        test-flags:
          nocapture: true
        builds:
        - target: x86_64-unknown-linux-gnu 
          name: x86_64_unknown_linux_gnu
          pre-steps: []
        - target: x86_64-pc-windows-msvc
          name: x86_64_pc_windows_msvc
          pre-steps: []
        - target: x86_64-apple-darwin
          name: x86_64_apple_darwin
          pre-steps: []

  - stage: release
    displayName: "Release"
    dependsOn:
    - build
    jobs:
    - job: release_github
      displayName: "Release to GitHub"
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: target
            targetPath: "$(Pipeline.Workspace)/target"
        - bash: |
            MY_TAG="$(Build.SourceBranch)"
            MY_TAG=latest
            echo $MY_TAG
            echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
            DATE="$(date +%Y-%m-%d)"
            echo "##vso[task.setvariable variable=build.date]$DATE"
            
            mkdir $(Pipeline.Workspace)/release

            unzip $(Pipeline.Workspace)/target/bebasin\ -\ x86_64-pc-windows-msvc.zip -d $(Pipeline.Workspace)/target/windows
            zip $(Pipeline.Workspace)/release/bebasin-x86_64-pc-windows-msvc.zip -j $(Pipeline.Workspace)/target/windows/b/x86_64-pc-windows-msvc/release/bebasin.exe

            unzip $(Pipeline.Workspace)/target/bebasin\ -\ x86_64-unknown-linux-gnu.zip -d $(Pipeline.Workspace)/target/linux
            zip $(Pipeline.Workspace)/release/bebasin-x86_64-unknown-linux-gnu.zip -j $(Pipeline.Workspace)/target/linux/b/x86_64-unknown-linux-gnu/release/bebasin

            unzip $(Pipeline.Workspace)/target/bebasin\ -\ x86_64-apple-darwin.zip -d $(Pipeline.Workspace)/target/macos
            zip $(Pipeline.Workspace)/release/bebasin-x86_64-apple-darwin.zip  -j $(Pipeline.Workspace)/target/macos/b/x86_64-apple-darwin/release/bebasin
          displayName: "Unzip files, create date and tag variables"
        - bash: |
            MD5SUM_WINDOWS="$(md5sum $(Pipeline.Workspace)/release/bebasin-x86_64-pc-windows-msvc.zip | cut -d" " -f1)"
            MD5SUM_LINUX="$(md5sum $(Pipeline.Workspace)/release/bebasin-x86_64-unknown-linux-gnu.zip | cut -d" " -f1)"
            MD5SUM_MACOS="$(md5sum $(Pipeline.Workspace)/release/bebasin-x86_64-apple-darwin.zip | cut -d" " -f1)"
            VERSION="$(date +%Y%m%d%H%M)"
            LAST_COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
            LATEST_JSON="$(node -e "console.log(JSON.stringify({version: $VERSION, checksum: {linux: \"$MD5SUM_LINUX\", windows: \"$MD5SUM_WINDOWS\", macos: \"$MD5SUM_MACOS\"}}))")"

            git config --global user.email "andra.antariksa+bot@gmail.com"
            git config --global user.name "Aaabot"

            # Push if there's any difference
            # Every compilation will resulting in different checksum!
            git clone https://aaabot:$(ACCESS_TOKEN)@github.com/bebasid/bebasin.git ../bebasin
            cd ../bebasin
            git remote set-url origin https://aaabot:$(ACCESS_TOKEN)@github.com/bebasid/bebasin.git
            
            sed -i -E "s/const CURRENT_VERSION: u64 = [0-9]+;/const CURRENT_VERSION: u64 = ${VERSION};/" src/main.rs
            echo $LATEST_JSON > latest.json
            git add latest.json src/main.rs
            
            git commit -m "Renew md5sum of latest release"
            git push origin master
          displayName: "Update md5sum"
        - task: GitHubRelease@0
          displayName: "GithubRelease@0 '$(build.my_tag) - $(build.date)'"
          inputs:
              gitHubConnection: andraantariksa_accesstoken
              tagSource: manual
              title: Latest Master release
              tag: '$(build.my_tag)'
              assetUploadMode: replace
              action: edit
              assets: "$(Pipeline.Workspace)/release/*"
              repositoryName: "$(Build.Repository.Name)"
              isPreRelease: false
