resources:
  repositories:
    - repository: rust_pipelines
      type: github
      name: xoac/rust-azure-pipelines
      ref: refs/heads/master
      endpoint: andraantariksa_accesstoken

stages:
  - stage: test
    displayName: "Tests"
    jobs:
    - template: ci/jobs/cargo-test.yaml@rust_pipelines
      parameters:
        test-flags:
          nocapture: true
        job_strategy:
          matrix:
            Linux:
              vmImage: ubuntu-16.04
            Windows:
              vmImage: vs2017-win2016

  - stage: build
    displayName: "Builds"
    dependsOn:
    - test
    jobs:
    - template: ci/scenarios/builds.yml@rust_pipelines 
      parameters:
        artifactName: target
        test-flags:
          nocapture: true
        builds:
        - target: x86_64-unknown-linux-gnu 
          name: x86_64_unknown_linux_gnu
          pre-steps: []
        - target: x86_64-pc-windows-msvc
          name: x86_64_pc_windows_msvc
          pre-steps: []

  - stage: release
    displayName: "Release"
    dependsOn:
    - build
    jobs:
    - job: release_github
      displayName: "Release to GitHub"
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: target
            targetPath: "$(Pipeline.Workspace)/target"
        - bash: |
            MY_TAG="$(Build.SourceBranch)"
            MY_TAG=${MY_TAG#refs/tags/}
            echo $MY_TAG
            echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
            DATE="$(date +%Y-%m-%d)"
            echo "##vso[task.setvariable variable=build.date]$DATE"
          displayName: "Create date and tag variables"
        - task: GitHubRelease@0
          displayName: "GithubRelease@0 '$(build.my_tag) - $(build.date)'"
          inputs:
              gitHubConnection: andraantariksa_accesstoken
              tagSource: manual
              title: '$(build.my_tag) - $(build.date)'
              tag: '$(build.my_tag)'
              assetUploadMode: replace
              action: edit
              assets: "$(Pipeline.Workspace)/target/*"
              repositoryName: "$(Build.Repository.Name)"
              isPreRelease: false
